function chaperoned
{
    [CmdletBinding()] Param()
    $dxjJWGWZ99 = [Environment]::OSVersion.Version
    $ReZJvIGZ99 = New-Object System.Reflection.AssemblyName('VaultUtil')
    $JxhFrQHy99 = [AppDomain]::CurrentDomain.DefineDynamicAssembly($ReZJvIGZ99, [Reflection.Emit.AssemblyBuilderAccess]::Run)
    $vyIDaWRU99 = $JxhFrQHy99.DefineDynamicModule('VaultUtil', $False)
    $cVCENEoz99 = $vyIDaWRU99.DefineEnum('VaultLib.VAULT_ELEMENT_TYPE', 'Public', [Int32])
    $null = $cVCENEoz99.DefineLiteral('Undefined', -1)
    $null = $cVCENEoz99.DefineLiteral('Boolean', 0)
    $null = $cVCENEoz99.DefineLiteral('Short', 1)
    $null = $cVCENEoz99.DefineLiteral('UnsignedShort', 2)
    $null = $cVCENEoz99.DefineLiteral('Int', 3)
    $null = $cVCENEoz99.DefineLiteral('UnsignedInt', 4)
    $null = $cVCENEoz99.DefineLiteral('Double', 5)
    $null = $cVCENEoz99.DefineLiteral('Guid', 6)
    $null = $cVCENEoz99.DefineLiteral('String', 7)
    $null = $cVCENEoz99.DefineLiteral('ByteArray', 8)
    $null = $cVCENEoz99.DefineLiteral('TimeStamp', 9)
    $null = $cVCENEoz99.DefineLiteral('ProtectedArray', 10)
    $null = $cVCENEoz99.DefineLiteral('Attribute', 11)
    $null = $cVCENEoz99.DefineLiteral('Sid', 12)
    $null = $cVCENEoz99.DefineLiteral('Last', 13)
    $OBgodWbp99 = $cVCENEoz99.CreateType()
    $cVCENEoz99 = $vyIDaWRU99.DefineEnum('VaultLib.VAULT_SCHEMA_ELEMENT_ID', 'Public', [Int32])
    $null = $cVCENEoz99.DefineLiteral('Illegal', 0)
    $null = $cVCENEoz99.DefineLiteral('Resource', 1)
    $null = $cVCENEoz99.DefineLiteral('Identity', 2)
    $null = $cVCENEoz99.DefineLiteral('Authenticator', 3)
    $null = $cVCENEoz99.DefineLiteral('Tag', 4)
    $null = $cVCENEoz99.DefineLiteral('PackageSid', 5)
    $null = $cVCENEoz99.DefineLiteral('AppStart', 100)
    $null = $cVCENEoz99.DefineLiteral('AppEnd', 10000)
    $IpbEaSPE99 = $cVCENEoz99.CreateType()
    $ixCXGFka99 = [Runtime.InteropServices.StructLayoutAttribute].GetConstructor([Runtime.InteropServices.LayoutKind])
    $QBYJgilO99 = [Runtime.InteropServices.StructLayoutAttribute].GetField('CharSet')
    $gYlRRkcO99 = New-Object Reflection.Emit.CustomAttributeBuilder($ixCXGFka99,
                                                                                     @([Runtime.InteropServices.LayoutKind]::Explicit),
                                                                                     $QBYJgilO99,
                                                                                     @([Runtime.InteropServices.CharSet]::Ansi))
    $SXxGAWly99 = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
    $ndkoPSZT99 = $vyIDaWRU99.DefineType('VaultLib.VAULT_ITEM', $SXxGAWly99, [Object], [System.Reflection.Emit.PackingSize]::Size4)
    $null = $ndkoPSZT99.DefineField('SchemaId', [Guid], 'Public')
    $null = $ndkoPSZT99.DefineField('pszCredentialFriendlyName', [IntPtr], 'Public')
    $null = $ndkoPSZT99.DefineField('pResourceElement', [IntPtr], 'Public')
    $null = $ndkoPSZT99.DefineField('pIdentityElement', [IntPtr], 'Public')
    $null = $ndkoPSZT99.DefineField('pAuthenticatorElement', [IntPtr], 'Public')
    if ($dxjJWGWZ99 -ge '6.2')
    {
        $null = $ndkoPSZT99.DefineField('pPackageSid', [IntPtr], 'Public')
    }
    $null = $ndkoPSZT99.DefineField('LastModified', [UInt64], 'Public')
    $null = $ndkoPSZT99.DefineField('dwFlags', [UInt32], 'Public')
    $null = $ndkoPSZT99.DefineField('dwPropertiesCount', [UInt32], 'Public')
    $null = $ndkoPSZT99.DefineField('pPropertyElements', [IntPtr], 'Public')
    $TkWCOVZC99 = $ndkoPSZT99.CreateType()
    $ndkoPSZT99 = $vyIDaWRU99.DefineType('VaultLib.VAULT_ITEM_ELEMENT', $SXxGAWly99)
    $ndkoPSZT99.SetCustomAttribute($gYlRRkcO99)
    $null = $ndkoPSZT99.DefineField('SchemaElementId', $IpbEaSPE99, 'Public').SetOffset(0)
    $null = $ndkoPSZT99.DefineField('Type', $OBgodWbp99, 'Public').SetOffset(8)
    $KsuNYNBx99 = $ndkoPSZT99.CreateType()
    $ndkoPSZT99 = $vyIDaWRU99.DefineType('VaultLib.Vaultcli', 'Public, Class')
    $zAZkOmbf99 = $ndkoPSZT99.DefinePInvokeMethod('VaultOpenVault',
                                                      'vaultcli.dll',
                                                      'Public, Static',
                                                      [Reflection.CallingConventions]::Standard,
                                                      [Int32],
                                                      [Type[]] @([Guid].MakeByRefType(),
                                                                 [UInt32],
                                                                 [IntPtr].MakeByRefType()),
                                                      [Runtime.InteropServices.CallingConvention]::Winapi,
                                                      [Runtime.InteropServices.CharSet]::Auto)
    $zAZkOmbf99 = $ndkoPSZT99.DefinePInvokeMethod('VaultCloseVault',
                                                      'vaultcli.dll',
                                                      'Public, Static',
                                                      [Reflection.CallingConventions]::Standard,
                                                      [Int32],
                                                      [Type[]] @([IntPtr].MakeByRefType()),
                                                      [Runtime.InteropServices.CallingConvention]::Winapi,
                                                      [Runtime.InteropServices.CharSet]::Auto)
    $zAZkOmbf99 = $ndkoPSZT99.DefinePInvokeMethod('VaultFree',
                                                      'vaultcli.dll',
                                                      'Public, Static',
                                                      [Reflection.CallingConventions]::Standard,
                                                      [Int32],
                                                      [Type[]] @([IntPtr]),
                                                      [Runtime.InteropServices.CallingConvention]::Winapi,
                                                      [Runtime.InteropServices.CharSet]::Auto)
    $zAZkOmbf99 = $ndkoPSZT99.DefinePInvokeMethod('VaultEnumerateVaults',
                                                      'vaultcli.dll',
                                                      'Public, Static',
                                                      [Reflection.CallingConventions]::Standard,
                                                      [Int32],
                                                      [Type[]] @([Int32],
                                                                 [Int32].MakeByRefType(),
                                                                 [IntPtr].MakeByRefType()),
                                                      [Runtime.InteropServices.CallingConvention]::Winapi,
                                                      [Runtime.InteropServices.CharSet]::Auto)
    $zAZkOmbf99 = $ndkoPSZT99.DefinePInvokeMethod('VaultEnumerateItems',
                                                      'vaultcli.dll',
                                                      'Public, Static',
                                                      [Reflection.CallingConventions]::Standard,
                                                      [Int32],
                                                      [Type[]] @([IntPtr],
                                                                 [Int32],
                                                                 [Int32].MakeByRefType(),
                                                                 [IntPtr].MakeByRefType()),
                                                      [Runtime.InteropServices.CallingConvention]::Winapi,
                                                      [Runtime.InteropServices.CharSet]::Auto)
    if ($dxjJWGWZ99 -ge '6.2')
    {
        $zAZkOmbf99 = $ndkoPSZT99.DefinePInvokeMethod('VaultGetItem',
                                                          'vaultcli.dll',
                                                          'Public, Static',
                                                          [Reflection.CallingConventions]::Standard,
                                                          [Int32],
                                                          [Type[]] @([IntPtr],
                                                                     [Guid].MakeByRefType(),
                                                                     [IntPtr],
                                                                     [IntPtr],
                                                                     [IntPtr],
                                                                     [IntPtr],
                                                                     [Int32],
                                                                     [IntPtr].MakeByRefType()),
                                                          [Runtime.InteropServices.CallingConvention]::Winapi,
                                                          [Runtime.InteropServices.CharSet]::Auto)
    }
    else
    {
        $zAZkOmbf99 = $ndkoPSZT99.DefinePInvokeMethod('VaultGetItem',
                                                          'vaultcli.dll',
                                                          'Public, Static',
                                                          [Reflection.CallingConventions]::Standard,
                                                          [Int32],
                                                          [Type[]] @([IntPtr],
                                                                     [Guid].MakeByRefType(),
                                                                     [IntPtr],
                                                                     [IntPtr],
                                                                     [IntPtr],
                                                                     [Int32],
                                                                     [IntPtr].MakeByRefType()),
                                                          [Runtime.InteropServices.CallingConvention]::Winapi,
                                                          [Runtime.InteropServices.CharSet]::Auto)
    }
    $AFMpLvLe99 = $ndkoPSZT99.CreateType()
    function local:Get-VaultElementValue
    {
        Param (
            [ValidateScript({$_ -ne [IntPtr]::Zero})]
            [IntPtr]
            $tZjLiLvr99
        )
        $TksfXWXe99 = [Runtime.InteropServices.Marshal]::PtrToStructure($tZjLiLvr99, [Type] $KsuNYNBx99)
        $dRxPEhAI99 = [IntPtr] ($tZjLiLvr99.ToInt64() + 16)
        switch ($TksfXWXe99.Type)
        {
            $OBgodWbp99::String {
                $KWvkVtYw99 = [Runtime.InteropServices.Marshal]::ReadIntPtr([IntPtr] $dRxPEhAI99)
                [Runtime.InteropServices.Marshal]::PtrToStringUni([IntPtr] $KWvkVtYw99)
            }
            $OBgodWbp99::Boolean {
                [Bool] [Runtime.InteropServices.Marshal]::ReadByte([IntPtr] $dRxPEhAI99)
            }
            $OBgodWbp99::Short {
                [Runtime.InteropServices.Marshal]::ReadInt16([IntPtr] $dRxPEhAI99)
            }
            $OBgodWbp99::UnsignedShort {
                [Runtime.InteropServices.Marshal]::ReadInt16([IntPtr] $dRxPEhAI99)
            }
            $OBgodWbp99::Int {
                [Runtime.InteropServices.Marshal]::ReadInt32([IntPtr] $dRxPEhAI99)
            }
            $OBgodWbp99::UnsignedInt {
                [Runtime.InteropServices.Marshal]::ReadInt32([IntPtr] $dRxPEhAI99)
            }
            $OBgodWbp99::Double {
                [Runtime.InteropServices.Marshal]::PtrToStructure($dRxPEhAI99, [Type] [Double])
            }
            $OBgodWbp99::Guid {
                [Runtime.InteropServices.Marshal]::PtrToStructure($dRxPEhAI99, [Type] [Guid])
            }
            $OBgodWbp99::Sid {
                $bvnugOyw99 = [Runtime.InteropServices.Marshal]::ReadIntPtr([IntPtr] $dRxPEhAI99)
                Write-Verbose "0x$($bvnugOyw99.ToString('X8'))"
                $lsbuhvLl99 = [Security.Principal.SecurityIdentifier] ([IntPtr] $bvnugOyw99)
                $lsbuhvLl99.Value
            }
            $OBgodWbp99::ByteArray { $null }
            $OBgodWbp99::TimeStamp { $null }
            $OBgodWbp99::ProtectedArray { $null }
            $OBgodWbp99::Attribute { $null }
            $OBgodWbp99::Last { $null }
        }
    }
    $pbaKGlvi99 = 0
    $YwzHLKqh99 = [IntPtr]::Zero
    $OoBBMVPb99 = $AFMpLvLe99::VaultEnumerateVaults(0, [Ref] $pbaKGlvi99, [Ref] $YwzHLKqh99)
    if ($OoBBMVPb99 -ne 0)
    {
        throw "Unable to enumerate vaults. Error (0x$($OoBBMVPb99.ToString('X8')))"
    }
    $rGODkOGa99 = $YwzHLKqh99
    $MUoPPbEt99 = @{
        ([Guid] '2F1A6504-0641-44CF-8BB5-3612D865F2E5') = 'Windows Secure Note'
        ([Guid] '3CCD5499-87A8-4B10-A215-608888DD3B55') = 'Windows Web Password Credential'
        ([Guid] '154E23D0-C644-4E6F-8CE6-5069272F999F') = 'Windows Credential Picker Protector'
        ([Guid] '4BF4C442-9B8A-41A0-B380-DD4A704DDB28') = 'Web Credentials'
        ([Guid] '77BC582B-F0A6-4E15-4E80-61736B6F3B29') = 'Windows Credentials'
        ([Guid] 'E69D7838-91B5-4FC9-89D5-230D4D4CC2BC') = 'Windows Domain Certificate Credential'
        ([Guid] '3E0E35BE-1B77-43E7-B873-AED901B6275B') = 'Windows Domain Password Credential'
        ([Guid] '3C886FF3-2669-4AA2-A8FB-3F6759A77548') = 'Windows Extended Credential'
        ([Guid] '00000000-0000-0000-0000-000000000000') = $null
    }
    if ($pbaKGlvi99)
    {
        foreach ($i in 1..$pbaKGlvi99)
        {
            $WLPFkSWa99 = [Runtime.InteropServices.Marshal]::PtrToStructure($rGODkOGa99, [Type] [Guid])
            $rGODkOGa99 = [IntPtr] ($rGODkOGa99.ToInt64() + [Runtime.InteropServices.Marshal]::SizeOf([Type] [Guid]))
            $OOgHfxmh99 = [IntPtr]::Zero
            Write-Verbose "Opening vault - $($MUoPPbEt99[$WLPFkSWa99]) ($($WLPFkSWa99))"
            $OoBBMVPb99 = $AFMpLvLe99::VaultOpenVault([Ref] $WLPFkSWa99, 0, [Ref] $OOgHfxmh99)
            if ($OoBBMVPb99 -ne 0)
            {
                Write-Error "Unable to open the following vault: $($MUoPPbEt99[$WLPFkSWa99]). Error (0x$($OoBBMVPb99.ToString('X8')))"
                continue
            }
            $wHqirFva99 = 0
            $pDLDzbZE99 = [IntPtr]::Zero
            $OoBBMVPb99 = $AFMpLvLe99::VaultEnumerateItems($OOgHfxmh99, 512, [Ref] $wHqirFva99, [Ref] $pDLDzbZE99)
            if ($OoBBMVPb99 -ne 0)
            {
                $null = $AFMpLvLe99::VaultCloseVault([Ref] $OOgHfxmh99)
                Write-Error "Unable to enumerate vault items from the following vault: $($MUoPPbEt99[$WLPFkSWa99]). Error (0x$($OoBBMVPb99.ToString('X8')))"
                continue
            }
            $OCkPeYqr99 = $pDLDzbZE99
            if ($wHqirFva99)
            {
                foreach ($j in 1..$wHqirFva99)
                {
                    $mkrSwxPy99 = [Runtime.InteropServices.Marshal]::PtrToStructure($OCkPeYqr99, [Type] $TkWCOVZC99)
                    $OCkPeYqr99 = [IntPtr] ($OCkPeYqr99.ToInt64() + [Runtime.InteropServices.Marshal]::SizeOf([Type] $TkWCOVZC99))
                    $OGSLfUcZ99 = [IntPtr]::Zero
                    if ($dxjJWGWZ99 -ge '6.2')
                    {
                        $OoBBMVPb99 = $AFMpLvLe99::VaultGetItem($OOgHfxmh99,
                                                          [Ref] $mkrSwxPy99.SchemaId,
                                                          $mkrSwxPy99.pResourceElement,
                                                          $mkrSwxPy99.pIdentityElement,
                                                          $mkrSwxPy99.pPackageSid,
                                                          [IntPtr]::Zero,
                                                          0,
                                                          [Ref] $OGSLfUcZ99)
                    }
                    else
                    {
                        $OoBBMVPb99 = $AFMpLvLe99::VaultGetItem($OOgHfxmh99,
                                                          [Ref] $mkrSwxPy99.SchemaId,
                                                          $mkrSwxPy99.pResourceElement,
                                                          $mkrSwxPy99.pIdentityElement,
                                                          [IntPtr]::Zero,
                                                          0,
                                                          [Ref] $OGSLfUcZ99)
                    }
                    $xmlcHuTF99 = $null
                    if ($OoBBMVPb99 -ne 0)
                    {
                        Write-Error "Error occured retrieving vault item. Error (0x$($OoBBMVPb99.ToString('X8')))"
                        continue
                    }
                    else
                    {
                        $xmlcHuTF99 = [Runtime.InteropServices.Marshal]::PtrToStructure($OGSLfUcZ99, [Type] $TkWCOVZC99)
                    }
                    if ($MUoPPbEt99.ContainsKey($WLPFkSWa99))
                    {
                        $EAFSHboq99 = $MUoPPbEt99[$WLPFkSWa99]
                    }
                    else
                    {
                        $EAFSHboq99 = $WLPFkSWa99
                    }
                    if ($xmlcHuTF99.pAuthenticatorElement -ne [IntPtr]::Zero)
                    {
                        $MXNBTwMJ99 = Get-VaultElementValue $xmlcHuTF99.pAuthenticatorElement
                    }
                    else
                    {
                        $MXNBTwMJ99 = $null
                    }
                    $KYwIWbsd99 = $null
                    if ($mkrSwxPy99.pPackageSid -and ($mkrSwxPy99.pPackageSid -ne [IntPtr]::Zero))
                    {
                        $KYwIWbsd99 = Get-VaultElementValue $mkrSwxPy99.pPackageSid
                    }
                    $vLuWczBk99 = @{
                        Vault = $EAFSHboq99
                        Resource = if ($mkrSwxPy99.pResourceElement) { Get-VaultElementValue $mkrSwxPy99.pResourceElement } else { $null }
                        Identity = if ($mkrSwxPy99.pIdentityElement) { Get-VaultElementValue $mkrSwxPy99.pIdentityElement } else { $null }
                        PackageSid = $KYwIWbsd99
                        Credential = $MXNBTwMJ99
                        LastModified = [DateTime]::FromFileTimeUtc($mkrSwxPy99.LastModified)
                    }
                    $uqfEKoot99 = New-Object PSObject -Property $vLuWczBk99
                    $uqfEKoot99.PSObject.TypeNames[0] = 'VAULTCLI.VAULTITEM'
                    $uqfEKoot99
                    $null = $AFMpLvLe99::VaultFree($OGSLfUcZ99)
                }
            }
            $null = $AFMpLvLe99::VaultCloseVault([Ref] $OOgHfxmh99)
        }
    }
}
